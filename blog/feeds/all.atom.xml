<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2016Fall CPA 課程網誌 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2017-01-06T12:00:00+08:00</updated><entry><title>W17</title><link href="./w17.html" rel="alternate"></link><published>2017-01-06T12:00:00+08:00</published><updated>2017-01-06T12:00:00+08:00</updated><author><name>40523146</name></author><id>tag:None,2017-01-06:./w17.html</id><summary type="html">&lt;script type="text/javascript" src="https://brython.info/src/brython_dist.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="https://2015fallhw.github.io/cptocadp/static/Cango-8v03.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="https://2015fallhw.github.io/cptocadp/static/Cango2D-7v01-min.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="https://2015fallhw.github.io/cptocadp/static/gearUtils-05.js"&gt;&lt;/script&gt;

&lt;h2&gt;利用漸開線原理, 以 Brython 繪製單一正齒輪廓:11齒&lt;/h2&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1 …&lt;/script&gt;</summary><content type="html">&lt;script type="text/javascript" src="https://brython.info/src/brython_dist.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="https://2015fallhw.github.io/cptocadp/static/Cango-8v03.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="https://2015fallhw.github.io/cptocadp/static/Cango2D-7v01-min.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="https://2015fallhw.github.io/cptocadp/static/gearUtils-05.js"&gt;&lt;/script&gt;

&lt;h2&gt;利用漸開線原理, 以 Brython 繪製單一正齒輪廓:11齒&lt;/h2&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 20
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")
&lt;/script&gt;</content><category term="Brython"></category></entry><entry><title>W16 新年快樂</title><link href="./w16-xin-nian-kuai-le.html" rel="alternate"></link><published>2016-12-30T12:00:00+08:00</published><updated>2016-12-30T12:00:00+08:00</updated><author><name>40523146</name></author><id>tag:None,2016-12-30:./w16-xin-nian-kuai-le.html</id><summary type="html">&lt;p&gt;2017年元旦快樂&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2017年元旦快樂&lt;/p&gt;


&lt;p&gt;首先了解random亂數模組的用法&lt;/p&gt;
&lt;p&gt;然後利用random模組產生一個介於1-100的整數,列印在網頁上&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下可以執行  Brython 程式 --&gt;

&lt;div id="newyear"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document
from browser import html
import random
print_location = document["newyear"]

def gen_int():
    num = random.randint(1,100)
    #print_location = document["newyear"]
    print_location &lt;= num + html.BR()

def lottery(e):
    for i in range(6):
        gen_int()
    print_location &lt;= "~" + html.BR()

#document["but1"].bind("click", gen_int)
document["but1"].bind("click", lottery)
&lt;/script&gt;

&lt;p&gt;&lt;button id="but1"&gt;產生整數亂數&lt;/button&gt;&lt;/p&gt;
&lt;script type="text/python3"&gt;
from browser import document
from browser import html
import random
print_location = document["newyear"]

def lottery(e):
    num_list = random.sample(list(range(1, 50)), 6)
    for i in range(6):
        print_location &lt;= num_list[i] + html.BR()
    print_location &lt;= "恭喜中獎!" + html.BR()

document["but2"].bind("click", lottery)
&lt;/script&gt;

&lt;p&gt;&lt;button id="but2"&gt;恭喜發財&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;猜數字&lt;/p&gt;
&lt;div id="id3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document
from browser import html
import random

id3 = document["id3"]
def guess(ev):
    # 清除 id3 中的內容
    id3.clear()
    id3 &lt;= "開始玩猜數字遊戲" + html.BR()
    標準答案 = random.randint(1, 100)
    你猜的數字 = int(input("請輸入您所猜 1~100 間的整數:"))
    猜測次數 = 1
    while 標準答案 != 你猜的數字:
        if 標準答案 &lt; 你猜的數字:
            #print("太大了，再猜一次 :)加油")
            # 清除 id3 中的內容
            id3.clear()
            id3 &lt;= "太大了，再猜一次 :)加油" + html.BR()
        else:
            #print("太小了，再猜一次 :)加油")
            # 清除 id3 中的內容
            id3.clear()
            id3 &lt;= "太小了，再猜一次 :)加油" + html.BR()
        你猜的數字 = int(input("請輸入您所猜 1~100 間的整數:"))
        猜測次數 += 1

    #print("猜對了！總共猜了", 猜測次數, "次")
    id3 &lt;= "猜對了！答案為" + str(標準答案) + ", 總共猜了" + str(猜測次數) + "次"

document["but3"].bind("click", guess)
&lt;/script&gt;

&lt;p&gt;&lt;button id="but3"&gt;玩猜數字遊戲&lt;/button&gt;&lt;/p&gt;
&lt;div id="id4"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document
from browser import html
import random

id4 = document["id4"]
def autoguess(ev):
    執行次數 = 100
    總猜測次數 = 0
    for i in range(執行次數):
        id4 &lt;= "第" + str(i+1) + "次玩:" + html.BR()
        下限 = 1
        上限 = 100
        標準答案 = random.randint(下限, 上限)
        pc猜的數字 = random.randint(下限, 上限)
        #print(標準答案, pc猜的數字)
        #integer int()
        #string str()
        #float float()
        #你猜的數字 = int(input("請輸入您所猜的整數:"))
        猜測次數 = 1
        while 標準答案 != pc猜的數字:
            if 標準答案 &lt; pc猜的數字:
                #print("太大了，再猜一次 :)加油")
                # 因此已經確定"pc猜的數字"不是答案, 因此 - 1
                id4 &lt;= "電腦猜的數字:" + str(pc猜的數字) + " 太大了!" + html.BR()
                上限 = pc猜的數字 - 1
            else:
                #print("太小了，再猜一次 :)加油")
                # 因此已經確定"pc猜的數字"不是答案, 因此 + 1
                id4 &lt;= "電腦猜的數字:" + str(pc猜的數字) + " 太小了!" + html.BR()
                下限 = pc猜的數字 + 1
            #pc猜的數字 = int(input("請輸入您所猜的整數:"))
            pc猜的數字 = random.randint(下限, 上限)
            猜測次數 += 1

        #print("猜對了！總共猜了", 猜測次數, "次")
        id4 &lt;= "電腦猜對了, 答案為: " + str(標準答案) + ", 總共猜了 "+ str(猜測次數) + "次" + html.BR()
        總猜測次數 += 猜測次數
    平均猜測次數 = int(總猜測次數/執行次數)
    #print("平均次數", 平均猜測次數)
    id4 &lt;= "平均次數: " + str(平均猜測次數)

document["but4"].bind("click", autoguess)
&lt;/script&gt;

&lt;p&gt;&lt;button id="but4"&gt;利用程式玩猜數字&lt;/button&gt;&lt;/p&gt;</content><category term="Brython"></category></entry><entry><title>CP W15 練習</title><link href="./cp-w15-lian-xi.html" rel="alternate"></link><published>2016-12-23T12:00:00+08:00</published><updated>2016-12-23T12:00:00+08:00</updated><author><name>40523146</name></author><id>tag:None,2016-12-23:./cp-w15-lian-xi.html</id><summary type="html">&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下可以執行  Brython 程式 --&gt;

&lt;div id="con"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as do
from browser import html
c = do["con"]
def compa(e):
    your_input = input("請輸入一個整數!")
    # 如何判斷所輸入的整數比 10 大

    if int(your_input) &gt; 10:
        c &lt;= "所輸入的整數:" + your_input + "比 10 大" + html.BR()
    else:
        c &lt;= "所輸入的整數:" + your_input + "比 10 小" + html.BR()

#print("test …&lt;/script&gt;</summary><content type="html">&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下可以執行  Brython 程式 --&gt;

&lt;div id="con"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as do
from browser import html
c = do["con"]
def compa(e):
    your_input = input("請輸入一個整數!")
    # 如何判斷所輸入的整數比 10 大

    if int(your_input) &gt; 10:
        c &lt;= "所輸入的整數:" + your_input + "比 10 大" + html.BR()
    else:
        c &lt;= "所輸入的整數:" + your_input + "比 10 小" + html.BR()

#print("test")
'''
for i in range(5):
    c &lt;= "test" + html.BR()
'''
do["b1"].bind("click", compa)
&lt;/script&gt;

&lt;p&gt;&lt;button id="b1"&gt;compa&lt;/button&gt;&lt;/p&gt;

&lt;pre class="brush: python"&gt;
&lt;div id="con"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document as do
from browser import html
c = do["con"]
def compa(e):
    your_input = input("請輸入一個整數!")
    # 如何判斷所輸入的整數比 10 大

    if int(your_input) &gt; 10:
        c &lt;= "所輸入的整數:" + your_input + "比 10 大" + html.BR()
    else:
        c &lt;= "所輸入的整數:" + your_input + "比 10 小" + html.BR()

#print("test")
'''
for i in range(5):
    c &lt;= "test" + html.BR()
'''
do["b1"].bind("click", compa)
&lt;/script&gt;
&lt;button id="b1"&gt;compa&lt;/button&gt;
&lt;/pre&gt;</content><category term="Brython"></category></entry><entry><title>CP W14 練習</title><link href="./cp-w14-lian-xi.html" rel="alternate"></link><published>2016-12-16T12:00:00+08:00</published><updated>2016-12-16T12:00:00+08:00</updated><author><name>40523146</name></author><id>tag:None,2016-12-16:./cp-w14-lian-xi.html</id><summary type="html">&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- ch01 基本的列印與輸入函式 --&gt;

&lt;script type="text/python3"&gt;
from browser import document
from browser import alert

'''
    # 利用 input() 取得使用者輸入, 然後進行資料處理或運算後, 列出結果
    #01-01.py
    print ("Hello World!")
    #01-02.py
    thetext = input("Enter some text ")
    print ("This is what you entered:")
    print (thetext)
    #01-03.py
    # Note that \n within quote marks forces a new line …&lt;/script&gt;</summary><content type="html">&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- ch01 基本的列印與輸入函式 --&gt;

&lt;script type="text/python3"&gt;
from browser import document
from browser import alert

'''
    # 利用 input() 取得使用者輸入, 然後進行資料處理或運算後, 列出結果
    #01-01.py
    print ("Hello World!")
    #01-02.py
    thetext = input("Enter some text ")
    print ("This is what you entered:")
    print (thetext)
    #01-03.py
    # Note that \n within quote marks forces a new line to be printed
    thetext = input("Enter some text\n")
    print ("This is what you entered:")
    print (thetext)
    #01-04.py
    prompt  = "Enter a some text "
    thetext = input(prompt)
    print ("This is what you entered:")
    print (thetext)
'''

def get_input(ev):
    the_input= input("請輸入")
    alert("輸入為:"+str(the_input))

document['ch01'].bind('click',get_input)
&lt;/script&gt;

&lt;p&gt;&lt;button id="ch01"&gt;取輸入後, 列印出來&lt;/button&gt;&lt;/p&gt;</content><category term="Brython"></category></entry><entry><title>W14 練習</title><link href="./w14-lian-xi.html" rel="alternate"></link><published>2016-12-12T14:35:00+08:00</published><updated>2016-12-12T14:35:00+08:00</updated><author><name>40523209</name></author><id>tag:None,2016-12-12:./w14-lian-xi.html</id><summary type="html">&lt;p&gt;以下為第十四週開始的城市練習,要利用 &lt;a href="http://mde.tw/2016fallcp/course/Python3Programs.txt"&gt;http://mde.tw/2016fallcp/course/Python3Programs.txt&lt;/a&gt; 要整理Brython 的用法.
</summary><content type="html">&lt;p&gt;以下為第十四週開始的城市練習,要利用 &lt;a href="http://mde.tw/2016fallcp/course/Python3Programs.txt"&gt;http://mde.tw/2016fallcp/course/Python3Programs.txt&lt;/a&gt; 要整理Brython 的用法.
&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;div id ="ex1"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
container = doc['ex1']

container&lt;="W14練習"
&lt;/script&gt;

&lt;div id ="ex2"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc['ex2']
mystring = input("要印出什麼字串?")
mynum = input("要印幾次?")

for i in range(int(mynum)):
    #container&lt;="W14練習-2"+html.BR()
    container&lt;=mystring+html.BR()
&lt;/script&gt;</content><category term="每週練習"></category></entry><entry><title>W13 練習-2</title><link href="./w13-lian-xi-2.html" rel="alternate"></link><published>2016-12-10T12:00:00+08:00</published><updated>2016-12-10T12:00:00+08:00</updated><author><name>楊永慶</name></author><id>tag:None,2016-12-10:./w13-lian-xi-2.html</id><summary type="html">&lt;p&gt;將&lt;a herf="http://mde.tw/2016fallcp/course/Python3Programs.txt"&gt;
http://mde.tw/2016fallcp/course/Python3Programs.txt&lt;/a&gt; 整理成brython
練習:編寫一個可以將適用者輸入的攝氏溫度,轉為華氏溫度&lt;/p&gt;
</summary><content type="html">&lt;p&gt;將&lt;a herf="http://mde.tw/2016fallcp/course/Python3Programs.txt"&gt;
http://mde.tw/2016fallcp/course/Python3Programs.txt&lt;/a&gt; 整理成brython
練習:編寫一個可以將適用者輸入的攝氏溫度,轉為華氏溫度&lt;/p&gt;


&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;div id="temperature"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc['temperature']
mystring = ""
cdegree = input("請輸入攝氏溫度:")
fdegree = float(cdegree)*9/5+32
output_string = "攝氏" +str(cdegree) + "度=華氏" +str(fdegree) + "度"
container &lt;= output_string
&lt;/script&gt;

&lt;p&gt;開始進行範例分配&lt;/p&gt;
&lt;p&gt;接受使用者輸入&lt;/p&gt;
&lt;p&gt;利用aler()顯示結果&lt;/p&gt;
&lt;p&gt;直接列印結果&lt;/p&gt;</content><category term="Brython"></category></entry><entry><title>2016Fall</title><link href="./2016fall.html" rel="alternate"></link><published>2016-12-09T12:00:00+08:00</published><updated>2016-12-09T12:00:00+08:00</updated><author><name>yen</name></author><id>tag:None,2016-12-09:./2016fall.html</id><summary type="html">&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;div id="container"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc["container"]
mvstring = ""
num = input("請輸入重複執行次數")
#for i in range(1,11):
for i in range(1,int/num)+1):
    mystring += str(i) + ":hello mde" +html.BR()
container &lt;= mystring
&lt;/script&gt;

&lt;script type="text/python3"&gt;
from browser import document as …&lt;/script&gt;</summary><content type="html">&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;div id="container"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc["container"]
mvstring = ""
num = input("請輸入重複執行次數")
#for i in range(1,11):
for i in range(1,int/num)+1):
    mystring += str(i) + ":hello mde" +html.BR()
container &lt;= mystring
&lt;/script&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
&lt;/script&gt;</content><category term="使用導引"></category></entry><entry><title>W13 練習-1</title><link href="./w13-lian-xi-1.html" rel="alternate"></link><published>2016-12-09T12:00:00+08:00</published><updated>2016-12-09T12:00:00+08:00</updated><author><name>40523146</name></author><id>tag:None,2016-12-09:./w13-lian-xi-1.html</id><summary type="html">&lt;p&gt;將&lt;a herf="http://mde.tw/2016fallcp/course/Python3Programs.txt"&gt;
http://mde.tw/2016fallcp/course/Python3Programs.txt&lt;/a&gt; 整理成brython&lt;/p&gt;
</summary><content type="html">&lt;p&gt;將&lt;a herf="http://mde.tw/2016fallcp/course/Python3Programs.txt"&gt;
http://mde.tw/2016fallcp/course/Python3Programs.txt&lt;/a&gt; 整理成brython&lt;/p&gt;


&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;div id="container"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc['container']
mystring = ""
num = input("請輸入重複執行次數:")
#for i in range(1,11):
for i in range(1,int(num)+1):
    mystring += str(i)+ ":hallo mde" +html.BR()
container &lt;= mystring
&lt;/script&gt;

&lt;p&gt;開始進行範例分配&lt;/p&gt;
&lt;p&gt;接受使用者輸入&lt;/p&gt;
&lt;p&gt;利用aler()顯示結果&lt;/p&gt;
&lt;p&gt;直接列印結果&lt;/p&gt;</content><category term="Brython"></category></entry><entry><title>W12 Brython 繪圖範例</title><link href="./w12-brython-hui-tu-fan-li.html" rel="alternate"></link><published>2016-12-02T00:00:00+08:00</published><updated>2016-12-02T00:00:00+08:00</updated><author><name>40523146</name></author><id>tag:None,2016-12-02:./w12-brython-hui-tu-fan-li.html</id><summary type="html">&lt;p&gt;Brython 繪圖&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Brython 繪圖&lt;/p&gt;


&lt;p&gt;繪圖流程, 導入程式庫, 啟動, 然後引用各種模組開始繪圖&lt;/p&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;canvas id="chord1" width="600" height="400"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 垂直線
    for i in range(xnum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()
def canvasText(x, y, fontSize, string, sup, sub, color, ctx):
    # 標定各弦音符號, 以及把位編號
    ctx.beginPath()
    ctx.fillStyle = color
    ctx.strokeStyle = color
    #ctx.font = "20px Arial"
    ctx.font = str(fontSize)+ "px Arial"
    ctx.fillText(string, x, y)
    ctx.font = str(fontSize-8)+ "px Arial"
    if sup != "":
        ctx.fillText(sup, x+fontSize/1.6, y-fontSize/2)
    if sub != "":
        ctx.fillText(sup, x+fontSize/1.6, y)
    ctx.fill()
    ctx.stroke()
    ctx.closePath() 

w = 20
h = 30
background(100, 100, w, h, 5, 5, ctx)
#canvasText(100, 80,20,"A", "b", "", "black", ctx)
mylist = ["E", "A", "D", "G", "B", "E"]
num = 0
for s in mylist:
    canvasText(100+num*w,  80, 20, s, "", "", "black", ctx)
    num = num + 1
&lt;/script&gt;

&lt;pre class="brush: python"&gt;
&lt;p&gt;繪圖流程, 導入程式庫, 啟動, 然後引用各種模組開始繪圖&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;
&lt;canvas id="chord1" width="600" height="400"&gt;&lt;/canvas&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 垂直線
    for i in range(xnum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()
def canvasText(x, y, fontSize, string, sup, sub, color, ctx):
    # 標定各弦音符號, 以及把位編號
    ctx.beginPath()
    ctx.fillStyle = color
    ctx.strokeStyle = color
    #ctx.font = "20px Arial"
    ctx.font = str(fontSize)+ "px Arial"
    ctx.fillText(string, x, y)
    ctx.font = str(fontSize-8)+ "px Arial"
    if sup != "":
        ctx.fillText(sup, x+fontSize/1.6, y-fontSize/2)
    if sub != "":
        ctx.fillText(sup, x+fontSize/1.6, y)
    ctx.fill()
    ctx.stroke()
    ctx.closePath() 

w = 20
h = 30
background(100, 100, w, h, 5, 5, ctx)
#canvasText(100, 80,20,"A", "b", "", "black", ctx)
mylist = ["E", "A", "D", "G", "B", "E"]
num = 0
for s in mylist:
    canvasText(100+num*w,  80, 20, s, "", "", "black", ctx)
    num = num + 1
&lt;/script&gt;

&lt;/pre&gt;</content><category term="Brython"></category></entry><entry><title>s40523146彰化第一位s級無證騎士的網誌</title><link href="./s40523146zhang-hua-di-yi-wei-sji-wu-zheng-qi-shi-de-wang-zhi.html" rel="alternate"></link><published>2016-11-15T12:00:00+08:00</published><updated>2016-11-15T12:00:00+08:00</updated><author><name>謝秉軒</name></author><id>tag:None,2016-11-15:./s40523146zhang-hua-di-yi-wei-sji-wu-zheng-qi-shi-de-wang-zhi.html</id><summary type="html">&lt;p&gt;第一次接觸&lt;/p&gt;
</summary><content type="html">&lt;p&gt;第一次接觸&lt;/p&gt;


&lt;p&gt;python，很多地方還不是很熟，希望趕快弄懂&lt;/p&gt;</content><category term="我的網誌"></category></entry><entry><title>W10 Brython 繪圖範例</title><link href="./w10-brython-hui-tu-fan-li.html" rel="alternate"></link><published>2016-11-14T12:00:00+08:00</published><updated>2016-11-14T12:00:00+08:00</updated><author><name>40523146</name></author><id>tag:None,2016-11-14:./w10-brython-hui-tu-fan-li.html</id><summary type="html">&lt;p&gt;Brython 繪圖&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Brython 繪圖&lt;/p&gt;


&lt;p&gt;繪圖流程, 導入程式庫, 啟動, 然後引用各種模組開始繪圖&lt;/p&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫兩條直線 --&gt;

&lt;canvas id="japanflag1" width="600" height="200"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["japanflag1"]
ctx = canvas.getContext("2d")

# 以下可以利用 ctx 物件進行畫圖
# 先畫一條直線
ctx.beginPath()
# 設定線的寬度為 1 個單位
ctx.lineWidth = 1
# 將畫筆移動到 (100, 100) 座標點
ctx.moveTo(100, 100)
# 然後畫直線到 (150, 200) 座標點
inc=10
for i in range(10):
    ctx.lineWidth = 1
    ctx.moveTo(100+i*inc, 100)
    ctx.lineTo(100+i*inc, 200)

# 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
ctx.strokeStyle = "blue"
# 實際執行畫線
ctx.stroke()
ctx.closePath()
&lt;/script&gt;

&lt;pre class="brush: python"&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫兩條直線 --&gt;

&lt;canvas id="japanflag1" width="600" height="200"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["japanflag1"]
ctx = canvas.getContext("2d")

# 以下可以利用 ctx 物件進行畫圖
# 先畫一條直線
ctx.beginPath()
# 設定線的寬度為 1 個單位
ctx.lineWidth = 1
# 將畫筆移動到 (100, 100) 座標點
ctx.moveTo(100, 100)
# 然後畫直線到 (150, 200) 座標點
inc=10
for i in range(10):
    ctx.lineWidth = 1
    ctx.moveTo(100+i*inc, 100)
    ctx.lineTo(100+i*inc, 200)

# 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
ctx.strokeStyle = "blue"
# 實際執行畫線
ctx.stroke()
ctx.closePath()
&lt;/script&gt;
&lt;/pre&gt;</content><category term="Brython"></category></entry><entry><title>2016Fall 程式練習題</title><link href="./2016fall-cheng-shi-lian-xi-ti.html" rel="alternate"></link><published>2016-10-22T12:00:00+08:00</published><updated>2016-10-22T12:00:00+08:00</updated><author><name>yen</name></author><id>tag:None,2016-10-22:./2016fall-cheng-shi-lian-xi-ti.html</id><summary type="html">&lt;p&gt;已知截至第六週 2016fallcpa 的分組資料位於倉儲中的 &lt;a href="./../w6_group.txt"&gt;w6_group.txt&lt;/a&gt;, 而從學校修課系統下載的修課人員名條則為 &lt;a href="./../w6_list.txt"&gt;w6_list.txt&lt;/a&gt;, 請各組著手練習, 找出尚未納入分組的人員名單, 並研擬如何處置上課一個半月卻尚未進入情況的學員?&lt;/p&gt;
</summary><content type="html">&lt;p&gt;已知截至第六週 2016fallcpa 的分組資料位於倉儲中的 &lt;a href="./../w6_group.txt"&gt;w6_group.txt&lt;/a&gt;, 而從學校修課系統下載的修課人員名條則為 &lt;a href="./../w6_list.txt"&gt;w6_list.txt&lt;/a&gt;, 請各組著手練習, 找出尚未納入分組的人員名單, 並研擬如何處置上課一個半月卻尚未進入情況的學員?&lt;/p&gt;


&lt;p&gt;以下利用 Brython 讀取位於倉儲中的 &lt;a href="./../w6_list.txt"&gt;w6_list.txt&lt;/a&gt; 與 &lt;a href="./../w6_group.txt"&gt;w6_group.txt&lt;/a&gt; 資料檔案.&lt;/p&gt;
&lt;p&gt;表示學校教務系統中, 修 2016fallcpa 的學員名單為:&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下利用 Brython 程式執行檔案讀取與比對流程 --&gt;

&lt;!-- 假如需要用圖型表示數字, 則利用 canvas 繪圖 --&gt;

&lt;!-- &lt;canvas id="plotarea" width="600" height="400"&gt;&lt;/canvas&gt; --&gt;

&lt;div id="container"&gt;&lt;/div&gt;

&lt;script type="text/python3" id="script1"&gt;
from browser import document, html
container = document['container']
data = open("./../w6_list.txt").read()
container &lt;= data
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;而截至 w6, 納入分組名單中的學員有:&lt;/p&gt;
&lt;div id="container2"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document, html
container2 = document['container2']
data2 = open("./../w6_group.txt").read()
container2 &lt;= data2
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;現在, 誰能夠幫我們找出至今尚未納入分組名單中的學員, 共有那些人？&lt;/p&gt;
&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document, html
# 從 id=script1 程式區段取 data 變數
from script1 import data
container3 = document['container3']
data3 = open("./../w6_group.txt").read()
group = data3.splitlines()
# 希望將分組資料轉為學員數列, 令為變數名稱 result_g
result_g = []
# 已經註冊者數列設為 registered
registered = []
for line in group:
    # 去除每一行最後的空白成員
    sline = line.split(",")
    # 再將各組拆成個別組員後, 串成 result_g
    for m in sline:
        result_g.append(m)
    #container3 &lt;= len(sline)
    #container3 &lt;= html.BR()
#container3 &lt;= len(result_g)
registered = data.splitlines()[:-1]
# 設法找出至今尚未分組的學員學號
not_in_group = [c for c in registered if c not in result_g]
#container3 &lt;= len(registered) -len(result_g)
n = 1
for i in not_in_group:
    container3 &lt;= "第"+str(n)+"位: "+ str(i)
    n = n + 1
    container3 &lt;= html.BR()
&lt;/script&gt;</content><category term="使用導引"></category></entry><entry><title>2016Fall 機械設計主題教學</title><link href="./2016fall-ji-jie-she-ji-zhu-ti-jiao-xue.html" rel="alternate"></link><published>2016-09-02T12:00:00+08:00</published><updated>2016-09-02T12:00:00+08:00</updated><author><name>yen</name></author><id>tag:None,2016-09-02:./2016fall-ji-jie-she-ji-zhu-ti-jiao-xue.html</id><summary type="html">&lt;p&gt;知識管理與最佳化應用實驗室試圖利用計算機程式、網際內容管理、電腦輔助設計實習與協同產品設計實習等課程, 進行與機械設計相關的主題式教學, 其中包含強化創造力的教學、令學員熟習六種工程表達方式, 並且俱備融入協同設計所需要的四大面向知識與技能.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;知識管理與最佳化應用實驗室試圖利用計算機程式、網際內容管理、電腦輔助設計實習與協同產品設計實習等課程, 進行與機械設計相關的主題式教學, 其中包含強化創造力的教學、令學員熟習六種工程表達方式, 並且俱備融入協同設計所需要的四大面向知識與技能.&lt;/p&gt;


&lt;h1&gt;機械設計主題教學&lt;/h1&gt;
&lt;p&gt;創造力三元素, 機械設計的六種表達, 協同設計的四大面向.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;強化創造能力 - 自學力、程式力與想像力
(Creative Competencies)&lt;/li&gt;
&lt;li&gt;熟習六種表達  - 口語、文字、2D、3D、理論與實體表達
(Six Presentation Methods)&lt;/li&gt;
&lt;li&gt;融入協同設計 - 電腦、網路、軟硬體工具與協同專案
(Collaborative Designs)&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;計算機程式&lt;/h1&gt;
&lt;p&gt;從 Python3 的 print(), input(), 變數命名到關鍵字, 可以透過簡單的單位轉換問題進行練習:&lt;/p&gt;
&lt;p&gt;首先我們舉 Python3 程式執行的三個地方:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在單機 Windows 10 操作系統環境下利用可攜程式系統執行&lt;/li&gt;
&lt;li&gt;利用遠端桌面或 X-Windows, 在近端利用遠端的電腦硬體與操作系統執行&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在近端利用瀏覽器執行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;單機執行:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;按下  start.bat 後, 系統就會配置好 git 與 Python3 的程式環境, 可以在命令列中直接用互動的方式執行 Python3 程式, 也可以在 SciTE 編輯器中, 透過設定按下 go 之後執行&lt;/p&gt;
&lt;p&gt;所牽涉的問題:&lt;/p&gt;
&lt;p&gt;可攜程式環境如何建立? Python3 執行環境如何配置? 執行的 Python3 是那一個版本?&lt;/p&gt;
&lt;p&gt;希望在 SciTE 中直接執行 Python3 程式, 該如何設定?&lt;/p&gt;
&lt;p&gt;能不能在 Leo Editor 中執行 Python3 程式, 為何要這樣做?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;近端連到遠端執行:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以 Remote Desktop, 連接到遠端的電腦畫面中執行可攜程式系統中的 Python3 程式, 基本架構與流程與近端單機執行相同.&lt;/p&gt;
&lt;p&gt;利用 putty 與 Xming, 連線到支援 X-Windows 協定的電腦, 將遠端的視窗搬到近端執行, 但仍使用遠端電腦的硬體與軟體支援.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在瀏覽器中執行:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;由於網際瀏覽器環境所整合的工具愈來愈多, 就連原本只能在單機執行的 SolidWorks, 也已經有初步成型的 OnShape 可以取代部份的零組件設計分析工作, 因此本課程以 Brython 為例, 說明如何在瀏覽器中執行 Python3 程式.&lt;/p&gt;
&lt;p&gt;所牽涉問題:&lt;/p&gt;
&lt;p&gt;如何設置? &lt;a href="https://www.brython.info/tests/console.html?lang=en"&gt;Brython Console&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;所有近端能執行的程式都能利用瀏覽器執行?&lt;/p&gt;
&lt;p&gt;以下使用 Brython 標準程式庫執行 Python3 繪圖程式:&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下利用 Brython 程式執行繪圖 --&gt;

&lt;canvas id="plotarea" width="600" height="400"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
# 導入 browser 模組中的 document, 並設為 doc 變數
from browser import document as doc
# 導入數學模組
import math
# 產生各小球的亂數速度用
import random
# 導入 browser 中的計時器, 建立動畫用
import browser.timer

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")

# 取畫布的寬與高度
width = canvas.width
height = canvas.height

n = 20
# 已知數列內容個數, 先分別與 None 對應
x = [None]*n
y = [None]*n
vy = [None]*n
vx = [None]*n
# 重力加速度, Y 方向向下為正
g = 0.05
# 空氣的黏滯阻尼係數
cor = 0.7 
# 球的彈力係數
fr = 0.95
# 球的半徑
r = 5

for i in range(n):
    x[i] = 300
    y[i] = 100
    # random.random() 將會產生介於 0 與 1 的浮點亂數
    vx[i] = 2*(random.random()-.5)
    vy[i] = 2*(random.random()-.5)

# 更新第 i 球 Y 座標的運算邏輯
def updateY(i):
    if ((y[i]+r) &lt; height):
        #y = height
        vy[i] += g
    else:
        vy[i] = -vy[i]*cor
        vx[i] *= fr
    y[i] += vy[i]
    if ((y[i]+r) &gt; height):
        y[i] = height-r

# 更新第 i 球 X 座標的運算邏輯
def updateX(i):
    if ((x[i]+r) &gt;= width or (x[i]-r) &lt;= 0):
        vx[i] = -vx[i]*cor
    x[i] += vx[i]
    if ((x[i]+r) &gt; width):
        x[i] = width-r
    elif ((x[i]-r) &lt; 0):
        x[i] = r

# 畫圓函式
def circle(x,y,r):
    ctx.beginPath()
    ctx.arc(x, y, r, 0, math.pi*2, True)
    ctx.fill()
    ctx.closePath()

# 寫字函式
def text(s):
    ctx.fillStyle = "#ff0000"
    ctx.font = "30px sans-serif"
    ctx.textBaseline = "bottom"
    ctx.fillText(s,0,height)

# 每隔特定時間, 進行動畫繪製
def animate():
    # 刷新畫布
    ctx.clearRect(0, 0, width, height)
    # 逐一重新繪製小球
    ctx.fillStyle = "#000000"
    for i in range(n):
        updateY(i)
        updateX(i)
        circle(x[i],y[i],r)

text("Click me!")

# 畫布點擊後執行的函式
def on_canvas_click(ev):
    browser.timer.set_interval(animate,0)

# 只要使用者點擊在畫布上任何地方, 即執行 on_canvas_click 函式
canvas.bind('click', on_canvas_click, False)
&lt;/script&gt;

&lt;p&gt;上面小球自由落體的繪圖程式:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&amp;lt;canvas id="plotarea" width="600" height="400"&amp;gt;&amp;lt;/canvas&amp;gt;
&amp;lt;script type="text/python3"&amp;gt;
# 導入 browser 模組中的 document, 並設為 doc 變數
from browser import document as doc
# 導入數學模組
import math
# 產生各小球的亂數速度用
import random
# 導入 browser 中的計時器, 建立動畫用
import browser.timer

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")

# 取畫布的寬與高度
width = canvas.width
height = canvas.height

n = 20
# 已知數列內容個數, 先分別與 None 對應
x = [None]*n
y = [None]*n
vy = [None]*n
vx = [None]*n
# 重力加速度, Y 方向向下為正
g = 0.05
# 空氣的黏滯阻尼係數
cor = 0.7 
# 球的彈力係數
fr = 0.95
# 球的半徑
r = 5

for i in range(n):
    x[i] = 300
    y[i] = 100
    # random.random() 將會產生介於 0 與 1 的浮點亂數
    vx[i] = 2*(random.random()-.5)
    vy[i] = 2*(random.random()-.5)

# 更新第 i 球 Y 座標的運算邏輯
def updateY(i):
    if ((y[i]+r) &amp;lt; height):
        #y = height
        vy[i] += g
    else:
        vy[i] = -vy[i]*cor
        vx[i] *= fr
    y[i] += vy[i]
    if ((y[i]+r) &amp;gt; height):
        y[i] = height-r

# 更新第 i 球 X 座標的運算邏輯
def updateX(i):
    if ((x[i]+r) &amp;gt;= width or (x[i]-r) &amp;lt;= 0):
        vx[i] = -vx[i]*cor
    x[i] += vx[i]
    if ((x[i]+r) &amp;gt; width):
        x[i] = width-r
    elif ((x[i]-r) &amp;lt; 0):
        x[i] = r

# 畫圓函式
def circle(x,y,r):
    ctx.beginPath()
    ctx.arc(x, y, r, 0, math.pi*2, True)
    ctx.fill()
    ctx.closePath()

# 寫字函式
def text(s):
    ctx.fillStyle = "#ff0000"
    ctx.font = "30px sans-serif"
    ctx.textBaseline = "bottom"
    ctx.fillText(s,0,height)

# 每隔特定時間, 進行動畫繪製
def animate():
    # 刷新畫布
    ctx.clearRect(0, 0, width, height)
    # 逐一重新繪製小球
    ctx.fillStyle = "#000000"
    for i in range(n):
        updateY(i)
        updateX(i)
        circle(x[i],y[i],r)

text("Click me!")

# 畫布點擊後執行的函式
def on_canvas_click(ev):
    browser.timer.set_interval(animate,0)

# 只要使用者點擊在畫布上任何地方, 即執行 on_canvas_click 函式
canvas.bind('click', on_canvas_click, False)
&amp;lt;/script&amp;gt;
&lt;/pre&gt;

&lt;p&gt;繪製日本國旗:&lt;/p&gt;
&lt;p&gt;步驟1, 先能畫一條線:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&amp;lt;canvas id="japanflag1" width="600" height="250"&amp;gt;&amp;lt;/canvas&amp;gt;
&amp;lt;script type="text/python3"&amp;gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["japanflag1"]
ctx = canvas.getContext("2d")

# 以下可以利用 ctx 物件進行畫圖
# 先畫一條直線
ctx.beginPath()
# 設定線的寬度為 1 個單位
ctx.lineWidth = 1
# 將畫筆移動到 (100, 100) 座標點
ctx.moveTo(100, 100)
# 然後畫直線到 (150, 200) 座標點
ctx.lineTo(150, 200)
# 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
ctx.strokeStyle = "blue"
# 實際執行畫線
ctx.stroke()
ctx.closePath()
&amp;lt;/script&amp;gt;
&lt;/pre&gt;

&lt;!-- 以下實際利用  Brython 畫一條直線 --&gt;

&lt;canvas id="japanflag1" width="600" height="250"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["japanflag1"]
ctx = canvas.getContext("2d")

# 以下可以利用 ctx 物件進行畫圖
# 先畫一條直線
ctx.beginPath()
# 設定線的寬度為 1 個單位
ctx.lineWidth = 1
# 將畫筆移動到 (100, 100) 座標點
ctx.moveTo(100, 100)
# 然後畫直線到 (150, 200) 座標點
ctx.lineTo(150, 200)
# 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
ctx.strokeStyle = "blue"
# 實際執行畫線
ctx.stroke()
ctx.closePath()
&lt;/script&gt;

&lt;p&gt;接著畫四條直線:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&amp;lt;canvas id="japanflag2" width="600" height="400"&amp;gt;&amp;lt;/canvas&amp;gt;
&amp;lt;script type="text/python"&amp;gt;
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["japanflag2"]
ctx = canvas.getContext("2d")

# 以下可以利用 ctx 物件進行畫圖
# 因為要畫四條直線, 這裡要將畫直線改寫為函式
# 定義畫直線的函式, 以 (x1, y1) 為起點, 畫到 (x2, y2)
def draw_line(x1, y1, x2, y2):
    global ctx
    ctx.beginPath()
    # 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    # 將畫筆移動到 (x1, y1) 座標點
    ctx.moveTo(x1, y1)
    # 然後畫直線到 (x2, y2) 座標點
    ctx.lineTo(x2, y2)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    # 實際執行畫線
    ctx.stroke()
    ctx.closePath()

# 準備呼叫 draw_line() 四次以便畫出國旗外框四條線
# 假設從 (10, 10) 畫到 (410, 310) 的外框
# 先畫兩條水平線
draw_line(10, 10, 410, 10)
draw_line(10, 310, 410, 310)
# 再畫兩條垂直線
draw_line(10, 10, 10, 310)
draw_line(410, 10, 410, 310)
&amp;lt;/script&amp;gt;
&lt;/pre&gt;

&lt;canvas id="japanflag2" width="600" height="350"&gt;&lt;/canvas&gt;

&lt;script type="text/python"&gt;
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["japanflag2"]
ctx = canvas.getContext("2d")

# 以下可以利用 ctx 物件進行畫圖
# 因為要畫四條直線, 這裡要將畫直線改寫為函式
# 定義畫直線的函式, 以 (x1, y1) 為起點, 畫到 (x2, y2)
def draw_line(x1, y1, x2, y2):
    global ctx
    ctx.beginPath()
    # 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    # 將畫筆移動到 (x1, y1) 座標點
    ctx.moveTo(x1, y1)
    # 然後畫直線到 (x2, y2) 座標點
    ctx.lineTo(x2, y2)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    # 實際執行畫線
    ctx.stroke()
    ctx.closePath()

# 準備呼叫 draw_line() 四次以便畫出國旗外框四條線
# 假設從 (10, 10) 畫到 (410, 310) 的外框
# 先畫兩條水平線
draw_line(10, 10, 410, 10)
draw_line(10, 310, 410, 310)
# 再畫兩條垂直線
draw_line(10, 10, 10, 310)
draw_line(410, 10, 410, 310)
&lt;/script&gt;

&lt;p&gt;接著在四條直線中央畫一個圓:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&amp;lt;canvas id="japanflag3" width="650" height="450"&amp;gt;&amp;lt;/canvas&amp;gt;
&amp;lt;script type="text/python"&amp;gt;
from browser import document
import math

# 準備繪圖畫布
canvas = document["japanflag3"]
ctx = canvas.getContext("2d")

# 以下可以利用 ctx 物件進行畫圖
# 因為要畫四條直線, 這裡要將畫直線改寫為函式
# 定義畫直線的函式, 以 (x1, y1) 為起點, 畫到 (x2, y2)
def draw_line(x1, y1, x2, y2):
    global ctx
    ctx.beginPath()
    # 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    # 將畫筆移動到 (x1, y1) 座標點
    ctx.moveTo(x1, y1)
    # 然後畫直線到 (x2, y2) 座標點
    ctx.lineTo(x2, y2)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    # 實際執行畫線
    ctx.stroke()
    ctx.closePath()

# 準備呼叫 draw_line() 四次以便畫出國旗外框四條線
# 假設從 (10, 10) 畫到 (410, 310) 的外框
# 先畫兩條水平線
draw_line(10, 10, 410, 10)
draw_line(10, 310, 410, 310)
# 再畫兩條垂直線
draw_line(10, 10, 10, 310)
draw_line(410, 10, 410, 310)

# 以下要在框線中央畫一個圓, 設半徑為 80
# context.arc(x,y,r,sAngle,eAngle,counterclockwise)
# arc(圓心 x, 圓心 y, 起始角, 終點角, 是否逆時鐘轉)
circle_x = 10 + 400/2
circle_y = 10 + 300/2

ctx.beginPath()
ctx.arc(circle_x, circle_y, 80, 0, math.pi*2, True)
# 設線顏色為紅色
ctx.strokeStyle = 'rgb(255, 0, 0)'
ctx.stroke()
# 填色設為紅色
ctx.fillStyle = 'rgb(255, 0, 0)'
ctx.fill()
ctx.closePath()
&amp;lt;/script&amp;gt;
&lt;/pre&gt;

&lt;canvas id="japanflag3" width="650" height="450"&gt;&lt;/canvas&gt;

&lt;script type="text/python"&gt;
from browser import document
import math

# 準備繪圖畫布
canvas = document["japanflag3"]
ctx = canvas.getContext("2d")

# 以下可以利用 ctx 物件進行畫圖
# 因為要畫四條直線, 這裡要將畫直線改寫為函式
# 定義畫直線的函式, 以 (x1, y1) 為起點, 畫到 (x2, y2)
def draw_line(x1, y1, x2, y2):
    global ctx
    ctx.beginPath()
    # 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    # 將畫筆移動到 (x1, y1) 座標點
    ctx.moveTo(x1, y1)
    # 然後畫直線到 (x2, y2) 座標點
    ctx.lineTo(x2, y2)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    # 實際執行畫線
    ctx.stroke()
    ctx.closePath()

# 準備呼叫 draw_line() 四次以便畫出國旗外框四條線
# 假設從 (10, 10) 畫到 (410, 310) 的外框
# 先畫兩條水平線
draw_line(10, 10, 410, 10)
draw_line(10, 310, 410, 310)
# 再畫兩條垂直線
draw_line(10, 10, 10, 310)
draw_line(410, 10, 410, 310)

# 以下要在框線中央畫一個圓, 設半徑為 80
# context.arc(x,y,r,sAngle,eAngle,counterclockwise)
# arc(圓心 x, 圓心 y, 起始角, 終點角, 是否逆時鐘轉)
circle_x = 10 + 400/2
circle_y = 10 + 300/2

ctx.beginPath()
ctx.arc(circle_x, circle_y, 80, 0, math.pi*2, True)
# 設線顏色為紅色
ctx.strokeStyle = 'rgb(255, 0, 0)'
ctx.stroke()
# 填色設為紅色
ctx.fillStyle = 'rgb(255, 0, 0)'
ctx.fill()
ctx.closePath()
&lt;/script&gt;

&lt;p&gt;然後將各繪圖模組寫成函式:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&amp;lt;canvas id="japanflag4" width="650" height="450"&amp;gt;&amp;lt;/canvas&amp;gt;
&amp;lt;script type="text/python"&amp;gt;
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["japanflag4"]
ctx = canvas.getContext("2d")

# 以下可以利用 ctx 物件進行畫圖
# 因為要畫四條直線, 這裡要將畫直線改寫為函式
# 定義畫直線的函式, 以 (x1, y1) 為起點, 畫到 (x2, y2)
def draw_line(ctx, x1, y1, x2, y2):
    ctx.beginPath()
    # 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    # 將畫筆移動到 (x1, y1) 座標點
    ctx.moveTo(x1, y1)
    # 然後畫直線到 (x2, y2) 座標點
    ctx.lineTo(x2, y2)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    # 實際執行畫線
    ctx.stroke()
    ctx.closePath()


# 將外框線寫成函式, 寬為高的 3/2 倍
# 因為 draw_frame 函式呼叫 draw_line() 因此要在其後定義
def draw_frame(ctx, x, y, w):
    # 準備呼叫 draw_line() 四次以便畫出國旗外框四條線
    # 假設從 (x, y) 畫到 (410, 310) 的外框
    # 先畫兩條水平線
    draw_line(ctx, x, y, w*3/2+x, y)
    draw_line(ctx, x, w+y, w*3/2+x, w+y)
    # 再畫兩條垂直線
    draw_line(ctx, x, y, x, w+y)
    draw_line(ctx, w*3/2+x, y, w*3/2+x, w+y)

def draw_circle(x, y, r, fill=None):
    global ctx
    ctx.beginPath()
    ctx.arc(x, y, r, 0, math.pi*2, True)
    if fill == None:
        ctx.fillStyle = 'rgb(255, 0, 0)'
        ctx.fill()
    else:
        ctx.strokeStyle = "rgb(255, 0, 0)"
        ctx.stroke()
    ctx.closePath()

# 呼叫 draw_frame()
width = 400
draw_frame(ctx, 10, 10, width)
# 計算框的中心點座標
x_center = 10 + width*3/2/2
y_center = 10 + width/2
# 中間圓的直徑為寬的 3/5
radius = width*3/5/2
draw_circle(x_center, y_center, radius)
&amp;lt;/script&amp;gt;
&lt;/pre&gt;

&lt;canvas id="japanflag4" width="650" height="450"&gt;&lt;/canvas&gt;

&lt;script type="text/python"&gt;
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["japanflag4"]
ctx = canvas.getContext("2d")

# 以下可以利用 ctx 物件進行畫圖
# 因為要畫四條直線, 這裡要將畫直線改寫為函式
# 定義畫直線的函式, 以 (x1, y1) 為起點, 畫到 (x2, y2)
def draw_line(ctx, x1, y1, x2, y2):
    ctx.beginPath()
    # 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    # 將畫筆移動到 (x1, y1) 座標點
    ctx.moveTo(x1, y1)
    # 然後畫直線到 (x2, y2) 座標點
    ctx.lineTo(x2, y2)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    # 實際執行畫線
    ctx.stroke()
    ctx.closePath()


# 將外框線寫成函式, 寬為高的 3/2 倍
# 因為 draw_frame 函式呼叫 draw_line() 因此要在其後定義
def draw_frame(ctx, x, y, w):
    # 準備呼叫 draw_line() 四次以便畫出國旗外框四條線
    # 假設從 (x, y) 畫到 (410, 310) 的外框
    # 先畫兩條水平線
    draw_line(ctx, x, y, w*3/2+x, y)
    draw_line(ctx, x, w+y, w*3/2+x, w+y)
    # 再畫兩條垂直線
    draw_line(ctx, x, y, x, w+y)
    draw_line(ctx, w*3/2+x, y, w*3/2+x, w+y)

def draw_circle(x, y, r, fill=None):
    global ctx
    ctx.beginPath()
    ctx.arc(x, y, r, 0, math.pi*2, True)
    if fill == None:
        ctx.fillStyle = 'rgb(255, 0, 0)'
        ctx.fill()
    else:
        ctx.strokeStyle = "rgb(255, 0, 0)"
        ctx.stroke()
    ctx.closePath()

# 呼叫 draw_frame()
width = 400
draw_frame(ctx, 10, 10, width)
# 計算框的中心點座標
x_center = 10 + width*3/2/2
y_center = 10 + width/2
# 中間圓的直徑為寬的 3/5
radius = width*3/5/2
draw_circle(x_center, y_center, radius)
&lt;/script&gt;

&lt;p&gt;接下來畫中華民國國旗:&lt;/p&gt;
&lt;canvas id="rocflag" width="650" height="450"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["rocflag"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(255, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
&lt;/script&gt;

&lt;pre class="brush: python"&gt;
&amp;lt;canvas id="rocflag" width="650" height="450"&amp;gt;&amp;lt;/canvas&amp;gt;
&amp;lt;script type="text/python3"&amp;gt;
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["rocflag"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(255, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
&amp;lt;/script&amp;gt;
&lt;/pre&gt;</content><category term="使用導引"></category><category term="創造力"></category><category term="表達能力"></category><category term="協同設計"></category></entry></feed>